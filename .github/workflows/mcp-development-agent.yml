name: MCP Development Agent

on:
  workflow_dispatch:
    inputs:
      task:
        description: Implementation task to execute
        required: true
      spec:
        description: Detailed spec or acceptance criteria (optional)
        required: false
        default: ''
      diff:
        description: Reference diff or exploration branch notes (optional)
        required: false
        default: ''
      context:
        description: Extra notes (logs, configs, linked issues)
        required: false
        default: ''
      post_as_comment:
        description: Issue/PR number to post the guidance (optional)
        required: false
        default: ''

jobs:
  develop:
    name: Generate implementation plan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write
      pull-requests: write
      models: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run development guidance prompt
        id: devplan
        uses: actions/ai-inference@v1
        with:
          prompt-file: .github/mcp-development.prompt.yml
          input: |
            task: ${{ github.event.inputs.task }}
            spec: ${{ github.event.inputs.spec }}
            diff: ${{ github.event.inputs.diff }}
            context: ${{ github.event.inputs.context }}

      - name: Capture output in job summary
        run: |
          cat <<'EOF' >> "$GITHUB_STEP_SUMMARY"
          ${{ steps.devplan.outputs.response }}
          EOF

      - name: Optionally post comment
        if: ${{ github.event.inputs.post_as_comment != '' && steps.devplan.outputs.response != '' }}
        uses: actions/github-script@v7
        with:
          script: |
            const body = `## üõ†Ô∏è MCP Development Plan\n\n${process.env.RESPONSE}`;
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: Number(process.env.ISSUE_NUMBER),
              body,
            });
        env:
          RESPONSE: ${{ steps.devplan.outputs.response }}
          ISSUE_NUMBER: ${{ github.event.inputs.post_as_comment }}
