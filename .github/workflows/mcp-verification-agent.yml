name: MCP Verification Agent

on:
  pull_request:
    types:
      - opened
      - synchronize
      - ready_for_review
      - reopened

jobs:
  verify:
    name: AI verification review
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      models: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Collect pull request context
        id: pr
        uses: actions/github-script@v7
        with:
          script: |
            const pull_number = context.payload.pull_request.number;
            const { data: diff } = await github.request('GET /repos/{owner}/{repo}/pulls/{pull_number}', {
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number,
              headers: { accept: 'application/vnd.github.v3.diff' },
            });
            const body = context.payload.pull_request.body ?? '';
            const testsSection = body.match(/###\s*Tests[\s\S]*?(?=###|$)/i);
            const tests = testsSection ? testsSection[0] : (body.trim() === '' ? 'No explicit tests documented.' : 'Tests not explicitly documented.');
            const metadata = [
              `PR #${pull_number}: ${context.payload.pull_request.title}`,
              `Author: ${context.payload.pull_request.user.login}`,
              `Base: ${context.payload.pull_request.base.ref}`,
              `Head: ${context.payload.pull_request.head.ref}`,
              `URL: ${context.payload.pull_request.html_url}`
            ].join('\n');
            core.setOutput('diff', diff);
            core.setOutput('tests', tests.trim());
            core.setOutput('metadata', metadata);

      - name: Run verification prompt
        id: verification
        uses: actions/ai-inference@v1
        with:
          prompt-file: .github/mcp-verification.prompt.yml
          input: |
            diff: |-
              ${{ steps.pr.outputs.diff }}
            tests: >-
              ${{ steps.pr.outputs.tests }}
            context: >-
              ${{ steps.pr.outputs.metadata }}

      - name: Append results to job summary
        run: |
          cat <<'EOF' >> "$GITHUB_STEP_SUMMARY"
          ${{ steps.verification.outputs.response }}
          EOF

      - name: Comment on pull request
        if: ${{ steps.verification.outputs.response != '' }}
        uses: actions/github-script@v7
        env:
          REVIEW: ${{ steps.verification.outputs.response }}
        with:
          script: |
            const pull_number = context.payload.pull_request.number;
            const body = `## ðŸ¤– MCP Check Verification Report\n\n${process.env.REVIEW}`;
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pull_number,
              body,
            });
